name: Deployment
on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependencies
        id: cache-deps
        uses: ./.github/actions/cache_deps
        with:
          caching: 'false'
      - name: Output Information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint Code
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Load and Cache Dependencies
        id: cache-deps
        uses: ./.github/actions/cache_deps

      - name: Debug Outputs
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"

      - name: Lint Code
        run: npm run lint

      - name: Run Tests and Save Results
        run: npm run test

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test-results/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build Website
        run: npm run build
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Download Test Results
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: ./dist
      - name: Output Contents
        run: ls -l ./test-results/
      - name: Deploy Site
        uses: ./.github/actions/deploy-s3-javascript
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.SECRET_KEY}}
        with:
          bucket: action-jackson
          region: ap-south-1
          dist-folder: ./dist

  information:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 
      - name: check custome js
        uses: ./.github/actions/deploy-s3-javascript
        
          